{"description":"GitRead","component":"com.sap.system.python3Operator","inports":[{"name":"inPath","type":"string"}],"outports":[{"name":"debug","type":"message"},{"name":"output","type":"message"},{"name":"stop","type":"message"}],"icon":"github","config":{"$type":"http://sap.com/vflow/de.architectsap.gitread.configSchema.json","access_token":"07243bb441593efd840323eda11bd5398f617d9c","file_name":"vflow/graphs/EDT/CELONIS/c5215227_c4pa/graph.json","repo":"vrep","script":"from github import Github\r\nimport re\r\n\r\n# First create a Github instance:\r\n\r\n# using username and password\r\n# g = Github(\"user\", \"password\")\r\n\r\n# or using an access token\r\ng = Github(api.config.access_token)\r\n\r\n# Github Enterprise with custom hostname\r\n# g = Github(base_url=\"https://{hostname}/api/v3\", login_or_token=\"access_token\")\r\n\r\ndef on_input(in_path):\r\n    \r\n# Then play with your Github objects:\r\n    \r\n    repo = g.get_user().get_repo(api.config.repo)\r\n    contents = repo.get_contents(in_path)\r\n    while contents:\r\n        file_content = contents.pop(0)\r\n        headers = {\"storage.path\": re.sub(r\"^/[^/]*/\", \"\", file_content.path)}\r\n        if file_content.type == \"dir\":\r\n            contents.extend(repo.get_contents(file_content.path))\r\n        else:\r\n            api.send(\"output\", api.Message(file_content.decoded_content, headers))\r\n            api.send(\"debug\", \"Read \" + file_content.path)\r\n    api.send(\"stop\", contents)\r\n\r\napi.set_port_callback(\"inPath\", on_input)"},"tags":{"github":""}}