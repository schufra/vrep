{"description":"GitWrite","component":"com.sap.system.python3Operator","inports":[{"name":"inFilename","type":"message"},{"name":"inFile","type":"message"}],"outports":[{"name":"debug","type":"message"},{"name":"stop","type":"message"}],"icon":"github","config":{"$type":"http://sap.com/vflow/de.architectsap.gitwrite.configSchema.json","access_token":"07243bb441593efd840323eda11bd5398f617d9c","branch":"master","comment":"Updated","file_name":"vflow/graphs/EDT/CELONIS/c5215227_c4pa/graph.json","repo":"vrep","script":"from github import Github\r\nimport re\r\n\r\n# First create a Github instance:\r\n\r\n# using username and password\r\n# g = Github(\"user\", \"password\")\r\n\r\n# or using an access token\r\n# g = Github(api.config.access_token)\r\n\r\n# Github Enterprise with custom hostname\r\ng = Github(base_url=\"https://api.github.com\", login_or_token=api.config.access_token)\r\n\r\ndef on_input(in_filename, in_file):\r\n        \r\n# Then play with your Github objects:\r\n    \r\n    filename = re.sub(r\"^/[^/]*/\", \"\", in_filename.body)\r\n    file = in_file.body\r\n    end_of_sequence = in_file.attributes.get(\"storage.endOfSequence\")\r\n    repo = g.get_user().get_repo(api.config.repo)\r\n    try:\r\n        contents = repo.get_contents(filename)\r\n        repo.update_file(contents.path, api.config.comment, file, contents.sha, branch=api.config.branch)\r\n        api.send(\"debug\", \"Updated \" + filename)\r\n    except:\r\n        repo.create_file(filename, \"Initial commit\", file, branch=api.config.branch)\r\n        api.send(\"debug\", \"Created \" + filename)\r\n    if end_of_sequence:\r\n        api.send(\"stop\", end_of_sequence)\r\n        \r\napi.set_port_callback([\"inFilename\", \"inFile\"], on_input)"},"tags":{"github":""}}